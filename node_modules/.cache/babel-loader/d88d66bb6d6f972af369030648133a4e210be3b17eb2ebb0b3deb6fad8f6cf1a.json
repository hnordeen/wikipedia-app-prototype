{"ast":null,"code":"export const isToday = date => {\n  const today = new Date();\n  return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();\n};\nexport const isYesterday = date => {\n  const yesterday = new Date();\n  yesterday.setDate(yesterday.getDate() - 1);\n  return date.getDate() === yesterday.getDate() && date.getMonth() === yesterday.getMonth() && date.getFullYear() === yesterday.getFullYear();\n};\nexport const formatDate = date => {\n  if (isToday(date)) return 'Today';\n  if (isYesterday(date)) return 'Yesterday';\n  return date.toLocaleDateString(undefined, {\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric'\n  });\n};\nexport const formatTime = date => {\n  return date.toLocaleTimeString(undefined, {\n    hour: 'numeric',\n    minute: 'numeric'\n  });\n};","map":{"version":3,"names":["isToday","date","today","Date","getDate","getMonth","getFullYear","isYesterday","yesterday","setDate","formatDate","toLocaleDateString","undefined","month","day","year","formatTime","toLocaleTimeString","hour","minute"],"sources":["/Users/haleynordeen/Desktop/Wikipedia App Prototyping/src/utils/dateUtils.ts"],"sourcesContent":["export const isToday = (date: Date): boolean => {\n  const today = new Date();\n  return (\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n  );\n};\n\nexport const isYesterday = (date: Date): boolean => {\n  const yesterday = new Date();\n  yesterday.setDate(yesterday.getDate() - 1);\n  return (\n    date.getDate() === yesterday.getDate() &&\n    date.getMonth() === yesterday.getMonth() &&\n    date.getFullYear() === yesterday.getFullYear()\n  );\n};\n\nexport const formatDate = (date: Date): string => {\n  if (isToday(date)) return 'Today';\n  if (isYesterday(date)) return 'Yesterday';\n  return date.toLocaleDateString(undefined, {\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric'\n  });\n};\n\nexport const formatTime = (date: Date): string => {\n  return date.toLocaleTimeString(undefined, {\n    hour: 'numeric',\n    minute: 'numeric'\n  });\n}; "],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAIC,IAAU,IAAc;EAC9C,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,OACEF,IAAI,CAACG,OAAO,CAAC,CAAC,KAAKF,KAAK,CAACE,OAAO,CAAC,CAAC,IAClCH,IAAI,CAACI,QAAQ,CAAC,CAAC,KAAKH,KAAK,CAACG,QAAQ,CAAC,CAAC,IACpCJ,IAAI,CAACK,WAAW,CAAC,CAAC,KAAKJ,KAAK,CAACI,WAAW,CAAC,CAAC;AAE9C,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIN,IAAU,IAAc;EAClD,MAAMO,SAAS,GAAG,IAAIL,IAAI,CAAC,CAAC;EAC5BK,SAAS,CAACC,OAAO,CAACD,SAAS,CAACJ,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1C,OACEH,IAAI,CAACG,OAAO,CAAC,CAAC,KAAKI,SAAS,CAACJ,OAAO,CAAC,CAAC,IACtCH,IAAI,CAACI,QAAQ,CAAC,CAAC,KAAKG,SAAS,CAACH,QAAQ,CAAC,CAAC,IACxCJ,IAAI,CAACK,WAAW,CAAC,CAAC,KAAKE,SAAS,CAACF,WAAW,CAAC,CAAC;AAElD,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIT,IAAU,IAAa;EAChD,IAAID,OAAO,CAACC,IAAI,CAAC,EAAE,OAAO,OAAO;EACjC,IAAIM,WAAW,CAACN,IAAI,CAAC,EAAE,OAAO,WAAW;EACzC,OAAOA,IAAI,CAACU,kBAAkB,CAACC,SAAS,EAAE;IACxCC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE;EACR,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIf,IAAU,IAAa;EAChD,OAAOA,IAAI,CAACgB,kBAAkB,CAACL,SAAS,EAAE;IACxCM,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACV,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}