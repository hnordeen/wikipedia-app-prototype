{"ast":null,"code":"const HISTORY_KEY = 'wikipedia_history';\nconst SEARCH_HISTORY_KEY = 'wikipedia_search_history';\nexport const addToHistory = (title, snippet, thumbnail) => {\n  const history = getHistory();\n\n  // Remove existing entry if present (to update it)\n  const filteredHistory = history.filter(item => item.title !== title);\n\n  // Add new entry at the beginning\n  const newHistory = [{\n    title,\n    snippet,\n    thumbnail,\n    timestamp: Date.now()\n  }, ...filteredHistory];\n\n  // Keep only the last 100 items\n  const trimmedHistory = newHistory.slice(0, 100);\n  localStorage.setItem(HISTORY_KEY, JSON.stringify(trimmedHistory));\n};\nexport const addToSearchHistory = query => {\n  const searchHistory = getSearchHistory();\n\n  // Add new entry at the beginning\n  const newHistory = [{\n    query,\n    timestamp: Date.now()\n  }, ...searchHistory];\n\n  // Keep only the last 100 searches\n  const trimmedHistory = newHistory.slice(0, 100);\n  localStorage.setItem(SEARCH_HISTORY_KEY, JSON.stringify(trimmedHistory));\n};\nexport const getHistory = () => {\n  const history = localStorage.getItem(HISTORY_KEY);\n  return history ? JSON.parse(history) : [];\n};\nexport const getSearchHistory = () => {\n  const history = localStorage.getItem(SEARCH_HISTORY_KEY);\n  return history ? JSON.parse(history) : [];\n};\nexport const getArticlesReadThisWeek = () => {\n  const history = getHistory();\n  const now = new Date();\n  const startOfWeek = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay());\n  startOfWeek.setHours(0, 0, 0, 0);\n  return history.filter(item => {\n    const itemDate = new Date(item.timestamp);\n    return itemDate >= startOfWeek;\n  }).length;\n};\nexport const getSearchesThisWeek = () => {\n  const searchHistory = getSearchHistory();\n  const now = new Date();\n  const startOfWeek = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay());\n  startOfWeek.setHours(0, 0, 0, 0);\n  return searchHistory.filter(item => {\n    const itemDate = new Date(item.timestamp);\n    return itemDate >= startOfWeek;\n  }).length;\n};\nexport const clearHistory = () => {\n  localStorage.removeItem(HISTORY_KEY);\n  localStorage.removeItem(SEARCH_HISTORY_KEY);\n};","map":{"version":3,"names":["HISTORY_KEY","SEARCH_HISTORY_KEY","addToHistory","title","snippet","thumbnail","history","getHistory","filteredHistory","filter","item","newHistory","timestamp","Date","now","trimmedHistory","slice","localStorage","setItem","JSON","stringify","addToSearchHistory","query","searchHistory","getSearchHistory","getItem","parse","getArticlesReadThisWeek","startOfWeek","getFullYear","getMonth","getDate","getDay","setHours","itemDate","length","getSearchesThisWeek","clearHistory","removeItem"],"sources":["/Users/haleynordeen/Desktop/Wikipedia App Prototyping/src/services/historyService.ts"],"sourcesContent":["import { ArticleImage } from '../api/wikipedia';\n\nexport interface HistoryItem {\n  title: string;\n  snippet: string;\n  timestamp: number;\n  thumbnail?: ArticleImage;\n}\n\nexport interface SearchHistoryItem {\n  query: string;\n  timestamp: number;\n}\n\nconst HISTORY_KEY = 'wikipedia_history';\nconst SEARCH_HISTORY_KEY = 'wikipedia_search_history';\n\nexport const addToHistory = (title: string, snippet: string, thumbnail?: ArticleImage) => {\n  const history = getHistory();\n  \n  // Remove existing entry if present (to update it)\n  const filteredHistory = history.filter(item => item.title !== title);\n  \n  // Add new entry at the beginning\n  const newHistory = [{\n    title,\n    snippet,\n    thumbnail,\n    timestamp: Date.now()\n  }, ...filteredHistory];\n\n  // Keep only the last 100 items\n  const trimmedHistory = newHistory.slice(0, 100);\n  \n  localStorage.setItem(HISTORY_KEY, JSON.stringify(trimmedHistory));\n};\n\nexport const addToSearchHistory = (query: string) => {\n  const searchHistory = getSearchHistory();\n  \n  // Add new entry at the beginning\n  const newHistory = [{\n    query,\n    timestamp: Date.now()\n  }, ...searchHistory];\n\n  // Keep only the last 100 searches\n  const trimmedHistory = newHistory.slice(0, 100);\n  \n  localStorage.setItem(SEARCH_HISTORY_KEY, JSON.stringify(trimmedHistory));\n};\n\nexport const getHistory = (): HistoryItem[] => {\n  const history = localStorage.getItem(HISTORY_KEY);\n  return history ? JSON.parse(history) : [];\n};\n\nexport const getSearchHistory = (): SearchHistoryItem[] => {\n  const history = localStorage.getItem(SEARCH_HISTORY_KEY);\n  return history ? JSON.parse(history) : [];\n};\n\nexport const getArticlesReadThisWeek = (): number => {\n  const history = getHistory();\n  const now = new Date();\n  const startOfWeek = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay());\n  startOfWeek.setHours(0, 0, 0, 0);\n\n  return history.filter(item => {\n    const itemDate = new Date(item.timestamp);\n    return itemDate >= startOfWeek;\n  }).length;\n};\n\nexport const getSearchesThisWeek = (): number => {\n  const searchHistory = getSearchHistory();\n  const now = new Date();\n  const startOfWeek = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay());\n  startOfWeek.setHours(0, 0, 0, 0);\n\n  return searchHistory.filter(item => {\n    const itemDate = new Date(item.timestamp);\n    return itemDate >= startOfWeek;\n  }).length;\n};\n\nexport const clearHistory = () => {\n  localStorage.removeItem(HISTORY_KEY);\n  localStorage.removeItem(SEARCH_HISTORY_KEY);\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}