{"ast":null,"code":"const WIKIPEDIA_API_URL = 'https://en.wikipedia.org/w/api.php';\nexport const searchWikipedia = async query => {\n  const params = new URLSearchParams({\n    action: 'query',\n    list: 'search',\n    srsearch: query,\n    format: 'json',\n    origin: '*',\n    srlimit: '10'\n  });\n  try {\n    const response = await fetch(`${WIKIPEDIA_API_URL}?${params}`);\n    const data = await response.json();\n    return data.query.search.map(result => ({\n      title: result.title,\n      snippet: result.snippet,\n      pageid: result.pageid\n    }));\n  } catch (error) {\n    console.error('Error searching Wikipedia:', error);\n    return [];\n  }\n};\nexport const getArticleContent = async title => {\n  const params = new URLSearchParams({\n    action: 'query',\n    prop: 'extracts',\n    exintro: '1',\n    explaintext: '1',\n    titles: title,\n    format: 'json',\n    origin: '*'\n  });\n  try {\n    const response = await fetch(`${WIKIPEDIA_API_URL}?${params}`);\n    const data = await response.json();\n    const pages = data.query.pages;\n    const pageId = Object.keys(pages)[0];\n    return pages[pageId].extract || 'No content found.';\n  } catch (error) {\n    console.error('Error fetching article:', error);\n    return 'Error loading article content.';\n  }\n};","map":{"version":3,"names":["WIKIPEDIA_API_URL","searchWikipedia","query","params","URLSearchParams","action","list","srsearch","format","origin","srlimit","response","fetch","data","json","search","map","result","title","snippet","pageid","error","console","getArticleContent","prop","exintro","explaintext","titles","pages","pageId","Object","keys","extract"],"sources":["/Users/haleynordeen/Desktop/Wikipedia App Prototyping/src/api/wikipedia.ts"],"sourcesContent":["const WIKIPEDIA_API_URL = 'https://en.wikipedia.org/w/api.php';\n\nexport interface SearchResult {\n  title: string;\n  snippet: string;\n  pageid: number;\n}\n\nexport const searchWikipedia = async (query: string): Promise<SearchResult[]> => {\n  const params = new URLSearchParams({\n    action: 'query',\n    list: 'search',\n    srsearch: query,\n    format: 'json',\n    origin: '*',\n    srlimit: '10'\n  });\n\n  try {\n    const response = await fetch(`${WIKIPEDIA_API_URL}?${params}`);\n    const data = await response.json();\n    return data.query.search.map((result: any) => ({\n      title: result.title,\n      snippet: result.snippet,\n      pageid: result.pageid\n    }));\n  } catch (error) {\n    console.error('Error searching Wikipedia:', error);\n    return [];\n  }\n};\n\nexport const getArticleContent = async (title: string): Promise<string> => {\n  const params = new URLSearchParams({\n    action: 'query',\n    prop: 'extracts',\n    exintro: '1',\n    explaintext: '1',\n    titles: title,\n    format: 'json',\n    origin: '*'\n  });\n\n  try {\n    const response = await fetch(`${WIKIPEDIA_API_URL}?${params}`);\n    const data = await response.json();\n    const pages = data.query.pages;\n    const pageId = Object.keys(pages)[0];\n    return pages[pageId].extract || 'No content found.';\n  } catch (error) {\n    console.error('Error fetching article:', error);\n    return 'Error loading article content.';\n  }\n}; "],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,oCAAoC;AAQ9D,OAAO,MAAMC,eAAe,GAAG,MAAOC,KAAa,IAA8B;EAC/E,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;IACjCC,MAAM,EAAE,OAAO;IACfC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAEL,KAAK;IACfM,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE,GAAG;IACXC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,iBAAiB,IAAIG,MAAM,EAAE,CAAC;IAC9D,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACX,KAAK,CAACa,MAAM,CAACC,GAAG,CAAEC,MAAW,KAAM;MAC7CC,KAAK,EAAED,MAAM,CAACC,KAAK;MACnBC,OAAO,EAAEF,MAAM,CAACE,OAAO;MACvBC,MAAM,EAAEH,MAAM,CAACG;IACjB,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAOL,KAAa,IAAsB;EACzE,MAAMf,MAAM,GAAG,IAAIC,eAAe,CAAC;IACjCC,MAAM,EAAE,OAAO;IACfmB,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAE,GAAG;IACZC,WAAW,EAAE,GAAG;IAChBC,MAAM,EAAET,KAAK;IACbV,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,iBAAiB,IAAIG,MAAM,EAAE,CAAC;IAC9D,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,MAAMc,KAAK,GAAGf,IAAI,CAACX,KAAK,CAAC0B,KAAK;IAC9B,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;IACpC,OAAOA,KAAK,CAACC,MAAM,CAAC,CAACG,OAAO,IAAI,mBAAmB;EACrD,CAAC,CAAC,OAAOX,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,gCAAgC;EACzC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}